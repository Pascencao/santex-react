{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport default function useStateWithStorage(key, defaultValue = '[]') {\n  _s();\n\n  const [initialValue, setInitialValue] = useState(JSON.parse(localStorage.getItem(key) || defaultValue));\n\n  const addProduct = item => {\n    const cart = JSON.parse(localStorage.getItem(key) || defaultValue);\n    const exist = cart.findIndex(cartItem => cartItem.variant_id === item.variant_id) > -1;\n\n    if (exist) {\n      cart.map(cartItem => {\n        if (cartItem.variant_id === item.variant_id) {\n          cartItem.quantity = cartItem.quantity + item.quantity;\n        }\n\n        return cartItem;\n      });\n    } else {\n      cart.push(item);\n    }\n\n    localStorage.setItem(key, JSON.stringify(cart));\n  };\n\n  return {\n    addProduct,\n    initialValue\n  };\n}\n\n_s(useStateWithStorage, \"i5h9Ux9AEp+9UO42GvOMH50HXm8=\");","map":{"version":3,"sources":["/Users/pabloascencao/Documents/Codigo/santex-react/src/hooks/useStateWithStorage.tsx"],"names":["useState","useStateWithStorage","key","defaultValue","initialValue","setInitialValue","JSON","parse","localStorage","getItem","addProduct","item","cart","exist","findIndex","cartItem","variant_id","map","quantity","push","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AASA,eAAe,SAASC,mBAAT,CACbC,GADa,EAEbC,YAAoB,GAAG,IAFV,EAGb;AAAA;;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAACM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBP,GAArB,KAA2BC,YAAtC,CAAD,CAAhD;;AACA,QAAMO,UAAU,GAAIC,IAAD,IAAoB;AACrC,UAAMC,IAAI,GAAGN,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBP,GAArB,KAA2BC,YAAtC,CAAb;AACA,UAAMU,KAAK,GAAGD,IAAI,CAACE,SAAL,CAAgBC,QAAD,IAA0BA,QAAQ,CAACC,UAAT,KAAwBL,IAAI,CAACK,UAAtE,IAAoF,CAAC,CAAnG;;AACA,QAAGH,KAAH,EAAS;AACPD,MAAAA,IAAI,CAACK,GAAL,CAAUF,QAAD,IAA0B;AACjC,YAAGA,QAAQ,CAACC,UAAT,KAAwBL,IAAI,CAACK,UAAhC,EAA2C;AACzCD,UAAAA,QAAQ,CAACG,QAAT,GAAmBH,QAAQ,CAACG,QAAT,GAAmBP,IAAI,CAACO,QAA3C;AACD;;AACD,eAAOH,QAAP;AACD,OALD;AAMD,KAPD,MAOO;AACLH,MAAAA,IAAI,CAACO,IAAL,CAAUR,IAAV;AACD;;AACDH,IAAAA,YAAY,CAACY,OAAb,CAAqBlB,GAArB,EAA0BI,IAAI,CAACe,SAAL,CAAeT,IAAf,CAA1B;AACD,GAdD;;AAeA,SAAO;AACLF,IAAAA,UADK;AAELN,IAAAA;AAFK,GAAP;AAID;;GAxBuBH,mB","sourcesContent":["import { useState } from \"react\";\n\ninterface ProductItem{\n  name: string;\n  price: number;\n  quantity: number;\n  variant_id: string;\n  variant_name: string;\n}\nexport default function useStateWithStorage(\n  key: string,\n  defaultValue: string = '[]'\n) {\n  const [initialValue, setInitialValue] = useState(JSON.parse(localStorage.getItem(key)||defaultValue))\n  const addProduct = (item:ProductItem)=>{\n    const cart = JSON.parse(localStorage.getItem(key)||defaultValue);\n    const exist = cart.findIndex((cartItem:ProductItem) => cartItem.variant_id === item.variant_id) > -1;\n    if(exist){\n      cart.map((cartItem:ProductItem) => {\n        if(cartItem.variant_id === item.variant_id){\n          cartItem.quantity =cartItem.quantity+ item.quantity;\n        }\n        return cartItem\n      })\n    } else {\n      cart.push(item)\n    }\n    localStorage.setItem(key, JSON.stringify(cart))\n  }\n  return {\n    addProduct,\n    initialValue\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}