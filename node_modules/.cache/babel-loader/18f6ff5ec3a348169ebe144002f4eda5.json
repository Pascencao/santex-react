{"ast":null,"code":"var _jsxFileName = \"/Users/pabloascencao/Documents/Codigo/santex-react/src/components/ProductList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { GET_COLLECTIONS } from \"../graphql/queries\";\nimport { ProductItem } from \"./ProductItem\";\nimport { Grid } from \"@mui/material\";\nimport { GridWrapper } from \"./card/styles\";\nimport { Paginator } from \"./paginator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProductList() {\n  _s();\n\n  var _data$products, _data$products3;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [limit] = useState(10);\n  const {\n    loading,\n    data\n  } = useQuery(GET_COLLECTIONS, {\n    variables: {\n      start: limit * (currentPage - 1),\n      limit: limit\n    }\n  });\n  console.log(data);\n  const [productList, setProductList] = useState((data === null || data === void 0 ? void 0 : (_data$products = data.products) === null || _data$products === void 0 ? void 0 : _data$products.items) || []);\n\n  const handlePaginationChange = page => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    if (!loading) {\n      var _data$products2;\n\n      setProductList((data === null || data === void 0 ? void 0 : (_data$products2 = data.products) === null || _data$products2 === void 0 ? void 0 : _data$products2.items) || []);\n    }\n  }, [loading, data]);\n  useEffect(() => {\n    console.log(productList);\n  }, [productList]);\n  return /*#__PURE__*/_jsxDEV(GridWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: productList === null || productList === void 0 ? void 0 : productList.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(ProductItem, {\n            item: item,\n            index: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Paginator, {\n      totalItems: data === null || data === void 0 ? void 0 : (_data$products3 = data.products) === null || _data$products3 === void 0 ? void 0 : _data$products3.totalItems,\n      current: currentPage,\n      itemsPerPage: limit,\n      onChange: handlePaginationChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n} //style={{}}\n\n_s(ProductList, \"LdfLARShUpoGbF9ISnceRrOz3Eo=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/pabloascencao/Documents/Codigo/santex-react/src/components/ProductList.tsx"],"names":["useQuery","useEffect","useState","GET_COLLECTIONS","ProductItem","Grid","GridWrapper","Paginator","ProductList","currentPage","setCurrentPage","limit","loading","data","variables","start","console","log","productList","setProductList","products","items","handlePaginationChange","page","map","item","index","totalItems"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAAA;;AAC5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAiCR,QAAQ,CAAC,CAAD,CAA/C;AACA,QAAM,CAAES,KAAF,IAAYT,QAAQ,CAAC,EAAD,CAA1B;AACA,QAAM;AAACU,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAkBb,QAAQ,CAACG,eAAD,EAAiB;AAACW,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAEJ,KAAK,IAAIF,WAAW,GAAC,CAAhB,CAAb;AAAiCE,MAAAA,KAAK,EAAEA;AAAxC;AAAZ,GAAjB,CAAhC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,CAAAW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,8BAAAA,IAAI,CAAEO,QAAN,kEAAgBC,KAAhB,KAAyB,EAA1B,CAA9C;;AACA,QAAMC,sBAAsB,GAAIC,IAAD,IAAgB;AAC7Cb,IAAAA,cAAc,CAACa,IAAD,CAAd;AACD,GAFD;;AAGAtB,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAG,CAACW,OAAJ,EAAY;AAAA;;AACVO,MAAAA,cAAc,CAAC,CAAAN,IAAI,SAAJ,IAAAA,IAAI,WAAJ,+BAAAA,IAAI,CAAEO,QAAN,oEAAgBC,KAAhB,KAAyB,EAA1B,CAAd;AACD;AACF,GAJQ,EAIP,CAACT,OAAD,EAASC,IAAT,CAJO,CAAT;AAKAZ,EAAAA,SAAS,CAAC,MAAI;AACZe,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAGA,sBAAO,QAAC,WAAD;AAAA,4BACL,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACKA,WADL,aACKA,WADL,uBACKA,WAAW,CAAEM,GAAb,CAAiB,CAACC,IAAD,EAAeC,KAAf,KAA8B;AAC9C,4BAAQ,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACN,QAAC,WAAD;AAAa,YAAA,IAAI,EAAED,IAAnB;AAAyB,YAAA,KAAK,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,gBAAR;AAGD,OAJA;AADL;AAAA;AAAA;AAAA;AAAA,YADK,eASL,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEb,IAAF,aAAEA,IAAF,0CAAEA,IAAI,CAAEO,QAAR,oDAAE,gBAAgBO,UAAvC;AAAmD,MAAA,OAAO,EAAElB,WAA5D;AAAyE,MAAA,YAAY,EAAEE,KAAvF;AAA8F,MAAA,QAAQ,EAAEW;AAAxG;AAAA;AAAA;AAAA;AAAA,YATK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAWD,C,CACD;;GA7BgBd,W;UAGUR,Q;;;KAHVQ,W","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { GET_COLLECTIONS } from \"../graphql/queries\";\nimport { ProductItem } from \"./ProductItem\";\nimport { Grid } from \"@mui/material\";\nimport { GridWrapper } from \"./card/styles\";\nimport { IProduct } from \"../models/products\";\nimport { Paginator } from \"./paginator\";\n\nexport function ProductList() {\n  const [currentPage, setCurrentPage ] = useState(1);\n  const [ limit ] = useState(10)\n  const {loading, data} = useQuery(GET_COLLECTIONS,{variables: {start: limit * (currentPage-1), limit: limit}})\n  console.log(data)\n  const [productList, setProductList] = useState(data?.products?.items || [])\n  const handlePaginationChange = (page: number)=>{\n    setCurrentPage(page)\n  }\n  useEffect(()=>{\n    if(!loading){\n      setProductList(data?.products?.items || [])\n    }\n  },[loading,data])\n  useEffect(()=>{\n    console.log(productList)\n  }, [productList])\n  return <GridWrapper>\n    <Grid container spacing={2} >\n        {productList?.map((item:IProduct,index:number)=>{\n          return (<Grid item xs={4}>\n            <ProductItem item={item} index={index} />\n          </Grid>)\n        })}\n    \n    </Grid>\n    <Paginator totalItems={data?.products?.totalItems} current={currentPage} itemsPerPage={limit} onChange={handlePaginationChange} />\n  </GridWrapper>;\n}\n//style={{}}"]},"metadata":{},"sourceType":"module"}