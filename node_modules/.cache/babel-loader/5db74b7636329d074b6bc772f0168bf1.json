{"ast":null,"code":"var _jsxFileName = \"/Users/pabloascencao/Documents/Codigo/santex-react/src/components/paginator.tsx\",\n    _s = $RefreshSig$();\n\nimport { ChevronLeft, ChevronRight, FirstPage, LastPage } from \"@material-ui/icons\";\nimport { Button, IconButton } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Paginator = ({\n  totalItems,\n  itemsPerPage,\n  current,\n  onChange\n}) => {\n  _s();\n\n  const [pagesButtons, setPagesButtons] = useState([]);\n  useEffect(() => {\n    let pages = Math.ceil(totalItems / itemsPerPage);\n    let buttons = [];\n    console.log(itemsPerPage, totalItems, pages);\n\n    for (let i = 1; i <= pages; i++) {\n      buttons.push(i);\n    }\n\n    setPagesButtons(buttons);\n  }, [totalItems, itemsPerPage]);\n\n  const setPage = num => onChange(num);\n\n  return /*#__PURE__*/_jsxDEV(PaginatorWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => setPage(1),\n      size: \"large\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(FirstPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => setPage(current - 1),\n      size: \"large\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(ChevronLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), pagesButtons.map(val => /*#__PURE__*/_jsxDEV(Button, {\n      color: val === current ? 'secondary' : 'primary',\n      onClick: () => setPage(val),\n      children: val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 42\n    }, this)), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => setPage(current + 1),\n      size: \"large\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(ChevronRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => setPage(pagesButtons[-1]),\n      size: \"large\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(LastPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Paginator, \"BHQ9XmCA8nVfteFRtNZXBGujhp8=\");\n\n_c = Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["/Users/pabloascencao/Documents/Codigo/santex-react/src/components/paginator.tsx"],"names":["ChevronLeft","ChevronRight","FirstPage","LastPage","Button","IconButton","useEffect","useState","Paginator","totalItems","itemsPerPage","current","onChange","pagesButtons","setPagesButtons","pages","Math","ceil","buttons","console","log","i","push","setPage","num","map","val"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,oBAA/D;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,eAAnC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAQA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,YAAb;AAA2BC,EAAAA,OAA3B;AAAoCC,EAAAA;AAApC,CAAD,KAAiE;AAAA;;AACtF,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAW,EAAX,CAAhD;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIS,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUR,UAAU,GAAGC,YAAvB,CAAZ;AACA,QAAIQ,OAAO,GAAG,EAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ,EAA0BD,UAA1B,EAAsCM,KAAtC;;AACA,SAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIN,KAApB,EAA2BM,CAAC,EAA5B,EAA+B;AAC3BH,MAAAA,OAAO,CAACI,IAAR,CAAaD,CAAb;AACH;;AACDP,IAAAA,eAAe,CAACI,OAAD,CAAf;AACH,GARQ,EAQP,CAACT,UAAD,EAAYC,YAAZ,CARO,CAAT;;AASA,QAAMa,OAAO,GAAIC,GAAD,IAAgBZ,QAAQ,CAACY,GAAD,CAAxC;;AACA,sBAAO,QAAC,gBAAD;AAAA,4BACH,QAAC,UAAD;AAAY,MAAA,OAAO,EAAE,MAAID,OAAO,CAAC,CAAD,CAAhC;AAAqC,MAAA,IAAI,EAAC,OAA1C;AAAkD,MAAA,KAAK,EAAC,SAAxD;AAAA,6BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eAIH,QAAC,UAAD;AAAa,MAAA,OAAO,EAAE,MAAIA,OAAO,CAACZ,OAAO,GAAC,CAAT,CAAjC;AAA6C,MAAA,IAAI,EAAC,OAAlD;AAA0D,MAAA,KAAK,EAAC,SAAhE;AAAA,6BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJG,EAOFE,YAAY,CAACY,GAAb,CAAkBC,GAAD,iBAAe,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,GAAG,KAAKf,OAAR,GAAkB,WAAlB,GAAgC,SAA/C;AAA0D,MAAA,OAAO,EAAE,MAAIY,OAAO,CAACG,GAAD,CAA9E;AAAA,gBAAsFA;AAAtF;AAAA;AAAA;AAAA;AAAA,YAAhC,CAPE,eAQH,QAAC,UAAD;AAAY,MAAA,OAAO,EAAE,MAAIH,OAAO,CAACZ,OAAO,GAAC,CAAT,CAAhC;AAA6C,MAAA,IAAI,EAAC,OAAlD;AAA0D,MAAA,KAAK,EAAC,SAAhE;AAAA,6BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARG,eAWH,QAAC,UAAD;AAAa,MAAA,OAAO,EAAE,MAAIY,OAAO,CAACV,YAAY,CAAC,CAAC,CAAF,CAAb,CAAjC;AAAqD,MAAA,IAAI,EAAC,OAA1D;AAAkE,MAAA,KAAK,EAAC,SAAxE;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAeH,CA3BM;;GAAML,S;;KAAAA,S","sourcesContent":["import { ChevronLeft, ChevronRight, FirstPage, LastPage } from \"@material-ui/icons\";\nimport { Button, IconButton } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\ninterface IPaginatorProps {\n    totalItems: number;\n    itemsPerPage: number;\n    current: number;\n    onChange: Function\n}\nexport const Paginator = ({totalItems, itemsPerPage, current, onChange}:IPaginatorProps)=>{\n    const [pagesButtons, setPagesButtons] = useState<number[]>([])\n    useEffect(()=>{\n        let pages = Math.ceil(totalItems / itemsPerPage);\n        let buttons = []\n        console.log(itemsPerPage, totalItems, pages)\n        for(let i = 1; i <= pages; i++){\n            buttons.push(i)\n        }\n        setPagesButtons(buttons);\n    },[totalItems,itemsPerPage])\n    const setPage = (num: number)=> onChange(num)\n    return <PaginatorWrapper>\n        <IconButton onClick={()=>setPage(1)} size=\"large\" color=\"primary\">\n            <FirstPage />\n        </IconButton>\n        <IconButton  onClick={()=>setPage(current-1)}size=\"large\" color=\"primary\">\n            <ChevronLeft />\n        </IconButton>\n        {pagesButtons.map((val: number)=><Button color={val === current ? 'secondary' : 'primary'} onClick={()=>setPage(val)}>{val}</Button>)}\n        <IconButton onClick={()=>setPage(current+1)} size=\"large\" color=\"primary\">\n            <ChevronRight />\n        </IconButton>\n        <IconButton  onClick={()=>setPage(pagesButtons[-1])} size=\"large\" color=\"primary\">\n            <LastPage />\n        </IconButton>\n    </PaginatorWrapper>\n}"]},"metadata":{},"sourceType":"module"}